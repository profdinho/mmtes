name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
      - develop
    paths:
      - '**.java'
      - '**.xml'
      - '**.yml'
      - '**.yaml'
      - '**.properties'
  pull_request:
    branches:
      - main
      - develop
    paths:
      - '**.java'
      - '**.xml'
      - '**.yml'
      - '**.yaml'
      - '**.properties'

# env:
#   ENVIRONMENT: 'develop'
#   DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#   DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#   DOCKER_IMAGE: 'mmtes'
#   DOCKER_TAG: 'latest'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Cache Maven Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean package

      - name: Run Unit Tests
        run: mvn test

      # - name: Publish to GitHub Packages Apache Maven
      #   run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      #   env:
      #     GITHUB_TOKEN: ${{ github.token }}
      
      #- name: Verificar Dockerfile
      #  run: ls -l ./Dockerfile

      #- name: Verificar arquivo JAR
      #  run: ls -l ./target/*.jar

  deploy-staging:
    needs: build-and-test
    if: ${{ github.ref_name == 'main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - uses: actions/checkout@v4
      - name: Verificar Dockerfile
        run: ls -l ./Dockerfile

      - name: Verificar arquivo JAR
        run: ls -l ./target/*.jar
        
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_USERNAME }}/mmtes:$(date +%s)

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      #- name: Install cosign
      #  if: github.event_name != 'pull_request'
      #  uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 #v3.5.0
      #  with:
      #    cosign-release: 'v2.2.4'
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      #- name: Set up Docker Buildx
      #  uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      #- name: Log into registry ${{ env.REGISTRY }}
      #  if: github.event_name != 'pull_request'
      #  uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
      #  with:
      #    registry: ${{ env.REGISTRY }}
      #    username: ${{ secrets.DOCKER_USERNAME }}
      #    password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      #- name: Extract Docker metadata
      #  id: meta
      #  uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      #  with:
      #    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      #- name: Build and push Docker image
      #  id: build-and-push
      #  uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      #  with:
      #    context: .
          # file: ./Dockerfile
          # push: ${{ github.event_name != 'pull_request' }}
          # tags: ${{ secrets.DOCKER_USERNAME }}/mmtes:latest
          # labels: main
          # cache-from: type=gha
          # cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      #- name: Sign the published Docker image
      #  if: ${{ github.event_name != 'pull_request' }}
      #  env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
      #    TAGS: ${{ steps.meta.outputs.tags }}
      #    DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
      #  run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Build and Push Docker Image
      #   uses: docker/build-push-action@v4
      #   with:
      #   #  context: .
      #     file: ./Dockerfile
      #     push: true
      #     tags: ${{ secrets.DOCKER_USERNAME }}/mmtes:latest
          